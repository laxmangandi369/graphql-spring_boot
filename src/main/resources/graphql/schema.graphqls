type Query {
	allBooks:[Book]
	bookById(id: ID):Book
	authorById(id:ID): Author

}

type Mutation{
	createBook(name: String!, description: String, authorId: Int!, price: Float!, pages: Int! ): Book
	saveAuthor(name: String!, testDataName : String):Author
	addRoles(role: String!, description: String): Role
	saveUser(signupModel : SignupModel): MyUser
	loginUser(username : String, password : String):MyUser
}

type Role {
	id : ID!
	role : String!
	description : String
}

input SignupModel{
	firstName : String!
	lastName : String!
	email : String!
	password : String!
	roles : [InputRole]
}

input InputRole{
	id:ID
	role:String
	description : String
	}

type MyUser {
	
	id : ID
	firstName : String
	lastName : String
	email : String
	password : String
	roles : [Role]
}

type Book {
	id:ID
	name: String
	description : String
	author : Author
	price:Float
	pages:Int
	
}

input BookModel {
	name: String
	description : String
	authorId : Int
	price:Float
	pages:Int! 
}

type Author{
	id:ID
	name:String
	dataTest : [DataTest]
}

type DataTest{
	id:ID
	name:String
}





















